version: '3.3'

services:
  postgresql:
    image: postgres:13.0-alpine
    volumes:
      - postgresql_data:/var/lib/postgresql/data/
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    networks:
      - persist

  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: always
    ports:
      - 8002:80
    environment:
      PGADMIN_DEFAULT_EMAIL: asyncworking@chui.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - persist

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    network_mode: bridge
    ports:
      - '4566:4566'
    environment:
      - DEFAULT_REGION=ap-southeast-2
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - SERVICES=lambda, sqs, s3, ses, events
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=docker-reuse
      - LAMBDA_REMOTE_DOCKER=false
      # - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"


volumes:
  postgresql_data: {}
  pgadmin-data: {}
  sonarqube_data: {}
  sonarqube_conf: {}
  sonarqube_extensions: {}
  sonarqube_bundled-plugins: {}
networks:
  persist: {}